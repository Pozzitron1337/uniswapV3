{"id":"aa0dc7d14a7489b73da42ab8ceff30c8","_format":"hh-sol-build-info-1","solcVersion":"0.7.6","solcLongVersion":"0.7.6+commit.7338295f","input":{"language":"Solidity","sources":{"contracts/openzeppelin/contracts/introspection/ERC1820Implementer.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"./IERC1820Implementer.sol\";\n\n/**\n * @dev Implementation of the {IERC1820Implementer} interface.\n *\n * Contracts may inherit from this and call {_registerInterfaceForAddress} to\n * declare their willingness to be implementers.\n * {IERC1820Registry-setInterfaceImplementer} should then be called for the\n * registration to be complete.\n */\ncontract ERC1820Implementer is IERC1820Implementer {\n    bytes32 constant private _ERC1820_ACCEPT_MAGIC = keccak256(abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\"));\n\n    mapping(bytes32 => mapping(address => bool)) private _supportedInterfaces;\n\n    /**\n     * See {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address account) public view virtual override returns (bytes32) {\n        return _supportedInterfaces[interfaceHash][account] ? _ERC1820_ACCEPT_MAGIC : bytes32(0x00);\n    }\n\n    /**\n     * @dev Declares the contract as willing to be an implementer of\n     * `interfaceHash` for `account`.\n     *\n     * See {IERC1820Registry-setInterfaceImplementer} and\n     * {IERC1820Registry-interfaceHash}.\n     */\n    function _registerInterfaceForAddress(bytes32 interfaceHash, address account) internal virtual {\n        _supportedInterfaces[interfaceHash][account] = true;\n    }\n}\n"},"contracts/openzeppelin/contracts/introspection/IERC1820Implementer.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface for an ERC1820 implementer, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1820#interface-implementation-erc1820implementerinterface[EIP].\n * Used by contracts that will be registered as implementers in the\n * {IERC1820Registry}.\n */\ninterface IERC1820Implementer {\n    /**\n     * @dev Returns a special value (`ERC1820_ACCEPT_MAGIC`) if this contract\n     * implements `interfaceHash` for `account`.\n     *\n     * See {IERC1820Registry-setInterfaceImplementer}.\n     */\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address account) external view returns (bytes32);\n}\n"}},"settings":{"viaIR":true,"evmVersion":"istanbul","optimizer":{"enabled":true,"mode":"3"},"libraries":{"contracts/libraries/NFTDescriptor.sol":{"NFTDescriptor":"0x0000000000000000000000000000000000000000"}},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"metadata":{"bytecodeHash":"none"}}},"output":{"errors":[],"version":"0.7.6","long_version":"0.7.6+commit.7338295f.Darwin.appleclang","zk_version":"1.3.10","sources":{"contracts/openzeppelin/contracts/introspection/ERC1820Implementer.sol":{"id":0,"ast":{"absolutePath":"contracts/openzeppelin/contracts/introspection/ERC1820Implementer.sol","exportedSymbols":{"ERC1820Implementer":[61],"IERC1820Implementer":[75]},"id":62,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"absolutePath":"contracts/openzeppelin/contracts/introspection/IERC1820Implementer.sol","file":"./IERC1820Implementer.sol","id":2,"nodeType":"ImportDirective","scope":62,"sourceUnit":76,"src":"58:35:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"IERC1820Implementer","nodeType":"UserDefinedTypeName","referencedDeclaration":75,"src":"435:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1820Implementer_$75","typeString":"contract IERC1820Implementer"}},"id":5,"nodeType":"InheritanceSpecifier","src":"435:19:0"}],"contractDependencies":[75],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"95:308:0","text":" @dev Implementation of the {IERC1820Implementer} interface.\n Contracts may inherit from this and call {_registerInterfaceForAddress} to\n declare their willingness to be implementers.\n {IERC1820Registry-setInterfaceImplementer} should then be called for the\n registration to be complete."},"fullyImplemented":true,"id":61,"linearizedBaseContracts":[61,75],"name":"ERC1820Implementer","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":13,"mutability":"constant","name":"_ERC1820_ACCEPT_MAGIC","nodeType":"VariableDeclaration","scope":61,"src":"461:100:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6,"name":"bytes32","nodeType":"ElementaryTypeName","src":"461:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"arguments":[{"hexValue":"455243313832305f4143434550545f4d41474943","id":10,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"537:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4","typeString":"literal_string \"ERC1820_ACCEPT_MAGIC\""},"value":"ERC1820_ACCEPT_MAGIC"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4","typeString":"literal_string \"ERC1820_ACCEPT_MAGIC\""}],"expression":{"id":8,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"520:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"520:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"520:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"510:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"510:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":19,"mutability":"mutable","name":"_supportedInterfaces","nodeType":"VariableDeclaration","scope":61,"src":"568:73:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(address => bool))"},"typeName":{"id":18,"keyType":{"id":14,"name":"bytes32","nodeType":"ElementaryTypeName","src":"576:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"568:44:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(address => bool))"},"valueType":{"id":17,"keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"595:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"587:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"606:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"baseFunctions":[74],"body":{"id":42,"nodeType":"Block","src":"858:108:0","statements":[{"expression":{"condition":{"baseExpression":{"baseExpression":{"id":30,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"875:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(address => bool))"}},"id":32,"indexExpression":{"id":31,"name":"interfaceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"896:13:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"875:35:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":34,"indexExpression":{"id":33,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"911:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"875:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30783030","id":38,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"954:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":37,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"946:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"946:7:0","typeDescriptions":{}}},"id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"946:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"875:84:0","trueExpression":{"id":35,"name":"_ERC1820_ACCEPT_MAGIC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"922:21:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":29,"id":41,"nodeType":"Return","src":"868:91:0"}]},"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"648:77:0","text":" See {IERC1820Implementer-canImplementInterfaceForAddress}."},"functionSelector":"249cb3fa","id":43,"implemented":true,"kind":"function","modifiers":[],"name":"canImplementInterfaceForAddress","nodeType":"FunctionDefinition","overrides":{"id":26,"nodeType":"OverrideSpecifier","overrides":[],"src":"831:8:0"},"parameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"interfaceHash","nodeType":"VariableDeclaration","scope":43,"src":"771:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":21,"name":"bytes32","nodeType":"ElementaryTypeName","src":"771:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":43,"src":"794:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"794:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"770:40:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":43,"src":"849:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"849:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"848:9:0"},"scope":61,"src":"730:236:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":59,"nodeType":"Block","src":"1296:68:0","statements":[{"expression":{"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":51,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1306:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(address => bool))"}},"id":54,"indexExpression":{"id":52,"name":"interfaceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1327:13:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1306:35:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":55,"indexExpression":{"id":53,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1306:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":56,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1353:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1306:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":58,"nodeType":"ExpressionStatement","src":"1306:51:0"}]},"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"972:224:0","text":" @dev Declares the contract as willing to be an implementer of\n `interfaceHash` for `account`.\n See {IERC1820Registry-setInterfaceImplementer} and\n {IERC1820Registry-interfaceHash}."},"id":60,"implemented":true,"kind":"function","modifiers":[],"name":"_registerInterfaceForAddress","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"interfaceHash","nodeType":"VariableDeclaration","scope":60,"src":"1239:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1239:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":60,"src":"1262:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"1262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1238:40:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"1296:0:0"},"scope":61,"src":"1201:163:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":62,"src":"404:962:0"}],"src":"33:1334:0"}},"contracts/openzeppelin/contracts/introspection/IERC1820Implementer.sol":{"id":1,"ast":{"absolutePath":"contracts/openzeppelin/contracts/introspection/IERC1820Implementer.sol","exportedSymbols":{"IERC1820Implementer":[75]},"id":76,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":63,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"58:264:1","text":" @dev Interface for an ERC1820 implementer, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820#interface-implementation-erc1820implementerinterface[EIP].\n Used by contracts that will be registered as implementers in the\n {IERC1820Registry}."},"fullyImplemented":false,"id":75,"linearizedBaseContracts":[75],"name":"IERC1820Implementer","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"359:200:1","text":" @dev Returns a special value (`ERC1820_ACCEPT_MAGIC`) if this contract\n implements `interfaceHash` for `account`.\n See {IERC1820Registry-setInterfaceImplementer}."},"functionSelector":"249cb3fa","id":74,"implemented":false,"kind":"function","modifiers":[],"name":"canImplementInterfaceForAddress","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"interfaceHash","nodeType":"VariableDeclaration","scope":74,"src":"605:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":66,"name":"bytes32","nodeType":"ElementaryTypeName","src":"605:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":74,"src":"628:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"628:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"604:40:1"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":74,"src":"668:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":71,"name":"bytes32","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"667:9:1"},"scope":75,"src":"564:113:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":76,"src":"323:356:1"}],"src":"33:647:1"}}},"contracts":{"contracts/openzeppelin/contracts/introspection/ERC1820Implementer.sol":{"ERC1820Implementer":{"abi":[{"inputs":[{"internalType":"bytes32","name":"interfaceHash","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"canImplementInterfaceForAddress","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC1820Implementer} interface. Contracts may inherit from this and call {_registerInterfaceForAddress} to declare their willingness to be implementers. {IERC1820Registry-setInterfaceImplementer} should then be called for the registration to be complete.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"notice\":\"See {IERC1820Implementer-canImplementInterfaceForAddress}.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/introspection/ERC1820Implementer.sol\":\"ERC1820Implementer\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"contracts/libraries/NFTDescriptor.sol:NFTDescriptor\":\"0x0000000000000000000000000000000000000000\"},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/introspection/ERC1820Implementer.sol\":{\"keccak256\":\"0xe6d5626ed641a8f98f8630df5617ac44c0c9d3f1fdf7318a680acadc19f60cd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4338d67ad4619afd212cabada812ca45dab74cf4a5d0f20b95558a6f9238f11f\",\"dweb:/ipfs/QmbupVuWzLFLWMDniPKzyEpYzBqsuUARceWQhGqPkvdHqS\"]},\"contracts/openzeppelin/contracts/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0x1b3a9cb2088366ff1df7bf5743d3d22ae2821df4db4202da506a878c732b27a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae71f314bd6c2e4fa351f299be07017d9c629a46b9c7b32efd9e86e93f6cc03d\",\"dweb:/ipfs/QmPFPoanRcy38bw83rY2KdQRtvMWgkj9ascPLZgLVzQsM7\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC1820Implementer.sol:ERC1820Implementer\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[1]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_3\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t4, r2, r1\n\tjump.lt\t@.BB0_3\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r3\n\tand\t@CPI0_2[0], r3, r3\n\tsub.s!\t@CPI0_3[0], r3, r3\n\tjump.ne\t@.BB0_3\n\tsub.s\t68, r2, r2\n\tsub.s\t64, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_3\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[1]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_3\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI0_5[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_11\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_6[0], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r3\n\tadd\t20, r3, r3\n\tst.1.inc\tr2, r3, r3\n\tadd\t52, r1, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_3\n\tld\tr1, r1\n.BB0_11:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t32, r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_3\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__staticcall:\n.func_begin1:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell 16560132843685760235432563665015751672798836239310425009852187686253054918656\nCPI0_4:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_5:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_6:\n\t.cell 31354931755517964842297050195944786674174155473394001051248746649903207284736\nCPI0_7:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\n","bytecode":{"object":"00020000000000020001000000000002000100000001035500000060011002700000001f0010019d0000008001000039000000400010043f00000000010004160000000102200190000000690000c13d000000000110004c000000700000c13d0000000002000031000000040120008c000000700000413d0000000101000367000000000301043b0000002103300197000000220330009c000000700000c13d000000440220008a000000400300008a000000000232004b000000700000813d0000002402100370000000000202043b000100000002001d0000000401100370000000000101043b0000000000100435000000200000043f0000001f0100004100000000020004140000001f0320009c0000000001024019000000c00110021000000023011001c70000801002000039007700720000040f0000000102200190000000700000613d000000000101043b000000010200002900000024022001970000000000200435000000200010043f0000001f0100004100000000020004140000001f0320009c0000000001024019000000c00110021000000023011001c70000801002000039007700720000040f0000000102200190000000700000613d000000000101043b000000000101041a000000ff0110019000000000010000190000005b0000613d000000400100043d000000200210003900000025030000410000000000320435000000400200043d0000000003210049000000140330003900000000033204360000003401100039000000400010043f0000001f010000410000001f0430009c0000000003018019000000400330021000000000020204330000001f0420009c00000000020180190000006002200210000000000232019f00000000030004140000001f0430009c0000000001034019000000c001100210000000000121019f00000026011001c70000801002000039007700720000040f0000000102200190000000700000613d000000000101043b000000400200043d0000000000120435000000400100043d000000000212004900000020022000390000001f030000410000001f0420009c00000000020380190000001f0410009c000000000103801900000040011002100000006002200210000000000112019f000000780001042e000000000110004c000000700000c13d0000002001000039000001000010044300000120000004430000002001000041000000780001042e0000000001000019000000790001043000000075002104230000000102000039000000000001042d0000000002000019000000000001042d0000007700000432000000780001042e00000079000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000249cb3fa000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000040000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff455243313832305f4143434550545f4d414749430000000000000000000000000200000000000000000000000000000000000000000000000000000000000000"},"methodIdentifiers":{"canImplementInterfaceForAddress(bytes32,address)":"249cb3fa"}},"hash":"0100002749913c391f0cf4befb695587b9547327dd2262f9d0d7bccf3d12257f","factoryDependencies":{}}},"contracts/openzeppelin/contracts/introspection/IERC1820Implementer.sol":{"IERC1820Implementer":{"abi":[{"inputs":[{"internalType":"bytes32","name":"interfaceHash","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"canImplementInterfaceForAddress","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for an ERC1820 implementer, as defined in the https://eips.ethereum.org/EIPS/eip-1820#interface-implementation-erc1820implementerinterface[EIP]. Used by contracts that will be registered as implementers in the {IERC1820Registry}.\",\"kind\":\"dev\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"details\":\"Returns a special value (`ERC1820_ACCEPT_MAGIC`) if this contract implements `interfaceHash` for `account`. See {IERC1820Registry-setInterfaceImplementer}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/introspection/IERC1820Implementer.sol\":\"IERC1820Implementer\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"contracts/libraries/NFTDescriptor.sol:NFTDescriptor\":\"0x0000000000000000000000000000000000000000\"},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0x1b3a9cb2088366ff1df7bf5743d3d22ae2821df4db4202da506a878c732b27a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae71f314bd6c2e4fa351f299be07017d9c629a46b9c7b32efd9e86e93f6cc03d\",\"dweb:/ipfs/QmPFPoanRcy38bw83rY2KdQRtvMWgkj9ascPLZgLVzQsM7\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"canImplementInterfaceForAddress(bytes32,address)":"249cb3fa"}}}}}}}